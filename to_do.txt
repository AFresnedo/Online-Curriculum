deployment
    -Dreamhost

basic User resource
    -RESTful Users controller actions
        -deny access for unintended user actions
    -fixtures or seeds?
    -student, admin, teacher, owner (parent)
        -in increasing order of likelihood to be removed
        -admin is 0
        -student is 1
        -teacher is 2
        -owner (parent) is 3
    -model
        -validity

QoL User resource
    -email validation registration
    -account recovery

security
    -user input is paramatarized
        -supposedly, rails view templates combat this
            -make sure they use whitelisting
    -check incomplete_security_checklist.txt in Dropbox
    -automatically log out people after a week
        -resets remember_tokens

problem dbs:
    -favor flexibility over performance, limited content
        -keep track of big SQL queries...they atm they don't involve the
        problems storage db (instead they involve DBs like score)
    -seperate dbs for word, figure-enhanced problems?
    -different dbs for different solutions (fill in, multiple choice, etc)

score db:
    -strict (simple, clean) relational DB with fast SQL queries because this db
    will scale with users
    -key is user_id, problem_id
        -SQL queries for fetching user_id, ALL problem_id
            -likewise, ALL user_id, problem_id
    -created_at, updated_at attributes to see where user left off

solutions db:
    -favor flexibility over performance, limited content
        -can't forsee any pitfalls here...solutions shouldn't be involved in
        any big queries at any point

do not forget:
    -editing profiles should be limited to owner of said profile:
    view/controller/route should reflect this...use cookies to identify and
    require login
    -foreign keys of DBs

user friendliness:
    -improve user index, label students/admins/teachers
    -add personal accounts as part of the seed
    -friendly forwarding (chp 10)
    -right now "current_user" auto-logins the user through cookies, but
    isn't it still possible that a user appears "logged out" at a page when
    they have cookies enabled? aka: close browser, enter bookmarked page
    without "current_user"
        -no, because header and footer appear on all pages, REGRESSION TEST
            -header/footer appear everywhere AND (another test) cookied user
            always appears logged in on ALL pages

documentation:
    -navigation and restrictions
        -only admin can see delete links, only admin can delete action
            -anything else in this vein
    -temp/perm login
    -user model, actions, and views
    -RESTful architecture
    -different account privilages
    -header/footer, and site in general, changing based on login

batch input:
    -fix figures, hardcoded addresses in input html must be wrong
